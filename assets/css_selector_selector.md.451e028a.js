import{_ as e,o as l,c as a,a as s}from"./app.c06e2760.js";const D=JSON.parse('{"title":"选择器相关","description":"","frontmatter":{},"headers":[{"level":2,"title":"选择器类型","slug":"选择器类型","link":"#选择器类型","children":[]},{"level":2,"title":"优先级","slug":"优先级","link":"#优先级","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"relativePath":"css/selector/selector.md","lastUpdated":1669707918000}'),n={name:"css/selector/selector.md"},o=s(`<h1 id="选择器相关" tabindex="-1">选择器相关 <a class="header-anchor" href="#选择器相关" aria-hidden="true">#</a></h1><h2 id="选择器类型" tabindex="-1">选择器类型 <a class="header-anchor" href="#选择器类型" aria-hidden="true">#</a></h2><ul><li>标签 <code>p</code></li><li>id <code>#box</code></li><li>class <code>.container</code></li><li>群组 <code>div,p</code></li><li>表关系的： <ul><li>后代 <code>.container .main</code></li><li>子 <code>.container&gt;.main</code></li><li>相邻 <code>.one+.two</code></li></ul></li><li>其他： <ul><li>伪元素</li><li>伪类</li><li>属性</li><li>层级</li></ul></li></ul><h2 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-hidden="true">#</a></h2><p><strong>内联&gt;id&gt;class&gt;标签</strong> 到具体的计算层⾯，优先级是由 A 、B、C、D 的值来决定的，其中它们的值计算规则如下：</p><p>如果存在内联样式，那么 A = 1, 否则 A = 0</p><p>B 的值等于 ID 选择器出现的次数</p><p>C 的值等于 类选择器 和 属性选择器 和 伪类 出现的总次数</p><p>D 的值等于 标签选择器 和 伪元素 出现的总次数</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">#</span><span style="color:#F78C6C;">nav</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ul</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">li</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">a</span><span style="color:#BABED8;">.</span><span style="color:#FFCB6B;">nav-link</span><span style="color:#BABED8;">;</span></span>
<span class="line"></span></code></pre></div><p>套用上面的算法，依次求出 A B C D 的值：</p><p>因为没有内联样式 ，所以 A = 0</p><p>ID 选择器总共出现了 1 次， B = 1</p><p>类选择器出现了 1 次， 属性选择器出现了 0 次，伪类选择器出现 0 次，所以 C = (1 + 0 + 0) = 1</p><p>标签选择器出现了 3 次， 伪元素出现了 0 次，所以 D = (3 + 0) = 3</p><p>上面算出的 A 、 B、C、D 可以简记作：(0, 1, 1, 3)</p><p>知道了优先级是如何计算之后，就来看看比较规则：</p><p>从左往右依次进行比较 ，较大者优先级更高 如果相等，则继续往右移动一位进行比较 如果 4 位全部相等，则后面的会覆盖前面的 经过上面的优先级计算规则，我们知道内联样式的优先级最高，如果外部样式需要覆盖内联样式，就需要使用!important</p><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-hidden="true">#</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors" target="_blank" rel="noreferrer">CSS 选择器</a></p>`,20),t=[o];function p(c,i,r,d,h,B){return l(),a("div",null,t)}const u=e(n,[["render",p]]);export{D as __pageData,u as default};
