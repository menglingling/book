import{_ as e,o as i,c as a,a as l}from"./app.a874a089.js";const v=JSON.parse('{"title":"词法环境(Lexical Environment)","description":"","frontmatter":{"tags":["JavaScript"],"date":"2024-01-23-周二","cdate":"2024-01-23 15:39","mdate":"2024-01-23 15:39","status":"doing","title":"词法环境(Lexical Environment)","hours":"5"},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"术语概念","slug":"术语概念","link":"#术语概念","children":[]},{"level":2,"title":"几个问答","slug":"几个问答","link":"#几个问答","children":[{"level":3,"title":"核心特点？","slug":"核心特点","link":"#核心特点","children":[]},{"level":3,"title":"有哪些属性和方法？","slug":"有哪些属性和方法","link":"#有哪些属性和方法","children":[]},{"level":3,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}]}],"relativePath":"javascript/JS中的代码的执行/词法环境(Lexical Environment).md","lastUpdated":1706520204000}'),n={name:"javascript/JS中的代码的执行/词法环境(Lexical Environment).md"},t=l('<h1 id="词法环境-lexical-environment" tabindex="-1">词法环境(Lexical Environment) <a class="header-anchor" href="#词法环境-lexical-environment" aria-hidden="true">#</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><ul><li>调用堆栈是 V8引擎的一部分，用来管理代码的执行顺序。</li><li>引擎用调用堆栈来存储执行上下文，引擎一开始执行 JS 就会自动创建全局上下文存入堆栈，执行流遇到函数调用会创建函数上下文存入堆栈，当函数执行完后再从堆栈中弹出，遇到新的函数调用重复这个操作，直到所有函数执行完，堆栈中只剩下全局上下文，当网页关闭，全局上下文也会被销毁。</li><li>每个执行上下文都有一个关联的对象，这个对象上存储了上下文中定义的所有变量和函数。这个对象JS高级程序设计中叫<code>variable object</code>，JS现代教程中叫<code>Lexical Environment</code>。</li><li>词法环境对象由两部分组成：</li></ul><ol><li><strong>环境记录（Environment Record）</strong> —— 一个存储所有局部变量作为其属性（包括一些其他信息，例如 <code>this</code> 的值）的对象。</li><li>对 <strong>外部词法环境</strong> 的引用，与外部代码相关联。</li></ol><h2 id="术语概念" tabindex="-1">术语概念 <a class="header-anchor" href="#术语概念" aria-hidden="true">#</a></h2><ul><li></li><li><p>作用域：变量和表达式可见或可被引用的的执行上下文范围（The scope is the current context of execution in which values and expressions are &quot;visible&quot; or can be referenced.from mdn）</p></li><li><p>lexical scope:词法作用域。定义在函数内部的函数可以访问外部函数的代码，外部函数无法访问内部函数的代码。</p></li><li><p>作用域链 scope chain = environment record(环境记录)</p></li><li><p>作用域链决定了各级上下文中的代码在访问变量和函数时的顺序。</p></li><li><p>闭包：在计算机科学方面的术语意思是，在实现上是一个结构体，它存储了一个函数和一个关联的环境。</p></li><li><p>作用域链的顶端总是上下文中代码正在执行的变量对象</p></li></ul><h2 id="几个问答" tabindex="-1">几个问答 <a class="header-anchor" href="#几个问答" aria-hidden="true">#</a></h2><h3 id="核心特点" tabindex="-1">核心特点？ <a class="header-anchor" href="#核心特点" aria-hidden="true">#</a></h3><ul><li></li></ul><h3 id="有哪些属性和方法" tabindex="-1">有哪些属性和方法？ <a class="header-anchor" href="#有哪些属性和方法" aria-hidden="true">#</a></h3><h3 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-hidden="true">#</a></h3><ul><li>Javascript现代教程</li><li>Javascript高级程序设计</li><li>MDN</li></ul>',12),r=[t];function c(d,o,s,h,_,p){return i(),a("div",null,r)}const x=e(n,[["render",c]]);export{v as __pageData,x as default};
