import{_ as s,c as a,o as l,a as n}from"./app.1706e325.js";const e="/book/assets/s2022-11-16-08.05.30.703aab38.png",p="/book/assets/s2022-11-16-08.43.26.b01f6aac.png",C=JSON.parse('{"title":"Flex","description":"","frontmatter":{},"headers":[{"level":2,"title":"flex-direction","slug":"flex-direction","link":"#flex-direction","children":[]},{"level":2,"title":"flex-wrap","slug":"flex-wrap","link":"#flex-wrap","children":[]},{"level":2,"title":"flex-flow（简写）","slug":"flex-flow-简写","link":"#flex-flow-简写","children":[]},{"level":2,"title":"justify-content","slug":"justify-content","link":"#justify-content","children":[]},{"level":2,"title":"align-items","slug":"align-items","link":"#align-items","children":[]},{"level":2,"title":"flex-basis","slug":"flex-basis","link":"#flex-basis","children":[]},{"level":2,"title":"flex-grow","slug":"flex-grow","link":"#flex-grow","children":[]},{"level":2,"title":"flex-shrink","slug":"flex-shrink","link":"#flex-shrink","children":[]},{"level":2,"title":"flex (简写)","slug":"flex-简写","link":"#flex-简写","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"relativePath":"css/flex/flex.md","lastUpdated":1668559637000}'),o={name:"css/flex/flex.md"},t=n(`<h1 id="flex" tabindex="-1">Flex <a class="header-anchor" href="#flex" aria-hidden="true">#</a></h1><p>flex 表示弹性盒子布局<br> 基本概念有：</p><ul><li>主轴方向</li><li>起始线和结束线</li><li>容器盒子 将容器 display 属性的值设置为 flex 或 inline-flex。一旦我们这样做了，那个容器的直接子元素就变成了 flex items。</li><li>可用空间 改变可用空间在我们的项目之间的分配方式</li></ul><h2 id="flex-direction" tabindex="-1">flex-direction <a class="header-anchor" href="#flex-direction" aria-hidden="true">#</a></h2><p>主轴方向</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-direction</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> row | row-reverse | column | column-reverse</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="flex-wrap" tabindex="-1">flex-wrap <a class="header-anchor" href="#flex-wrap" aria-hidden="true">#</a></h2><p>是否换行</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-wrap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> nowrap | wrap | wrap-reverse</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="flex-flow-简写" tabindex="-1">flex-flow（简写） <a class="header-anchor" href="#flex-flow-简写" aria-hidden="true">#</a></h2><p>flex-direction + flex-wrap</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-flow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> row nowrap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="justify-content" tabindex="-1">justify-content <a class="header-anchor" href="#justify-content" aria-hidden="true">#</a></h2><p>项目在主轴上的对齐方式</p><p>效果：</p><p><img src="`+e+`" alt="img"></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | space-between | space-around</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="align-items" tabindex="-1">align-items <a class="header-anchor" href="#align-items" aria-hidden="true">#</a></h2><p>项目在交叉轴上的对齐方式</p><p>效果：</p><p><img src="`+p+`" alt="img"></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="flex-basis" tabindex="-1">flex-basis <a class="header-anchor" href="#flex-basis" aria-hidden="true">#</a></h2><p>项目基本尺寸，在 flex-grow 和 flex-shrink 生效前的尺寸 , 默认值为 auto，即项目的本来大小，如设置了 width 则元素尺寸由 width/height 决定（主轴方向），没有设置则由内容决定</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-basis</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto | &lt;length&gt;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* default auto */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="flex-grow" tabindex="-1">flex-grow <a class="header-anchor" href="#flex-grow" aria-hidden="true">#</a></h2><p>定义项目的放大比例（容器宽度&gt;元素总宽度时如何伸展,默认为 0，即如果存在剩余空间，也不放大</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-grow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;number&gt;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* default 0 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="flex-shrink" tabindex="-1">flex-shrink <a class="header-anchor" href="#flex-shrink" aria-hidden="true">#</a></h2><p>定义了项目的缩小比例（容器宽度&lt;元素总宽度时如何收缩），默认为 1，即如果空间不足，该项目将缩小</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-shrink</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;number&gt;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* default 1 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="flex-简写" tabindex="-1">flex (简写) <a class="header-anchor" href="#flex-简写" aria-hidden="true">#</a></h2><p>flex 属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto</p><p>flex-basis:0 和 flex-basis:auto 的区别</p><p>当设置为 0 时（绝对弹性元素），此时相当于告诉 flex-grow 和 flex-shrink 在伸缩的时候不需要考虑我的尺寸</p><p>当设置为 auto 时（相对弹性元素），此时则需要在伸缩时将元素尺寸纳入考虑</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> none | [ &lt; </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flex-grow</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> &gt; &lt; </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flex-shrink</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> &gt;? || &lt; </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flex-basis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> &gt; ]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-hidden="true">#</a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox" target="_blank" rel="noreferrer">MDN 弹性盒的基本概念</a></li></ul>`,39),c=[t];function r(i,d,D,y,h,F){return l(),a("div",null,c)}const x=s(o,[["render",r]]);export{C as __pageData,x as default};
