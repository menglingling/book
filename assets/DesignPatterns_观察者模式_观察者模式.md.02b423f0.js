import{_ as a,o as s,c as r,b as e,d as t}from"./app.a874a089.js";const g=JSON.parse('{"title":"观察者模式(observer)","description":"","frontmatter":{},"headers":[{"level":2,"title":"What","slug":"what","link":"#what","children":[]}],"relativePath":"DesignPatterns/观察者模式/观察者模式.md","lastUpdated":1706520204000}'),n={name:"DesignPatterns/观察者模式/观察者模式.md"},o=e("h1",{id:"观察者模式-observer",tabindex:"-1"},[t("观察者模式(observer) "),e("a",{class:"header-anchor",href:"#观察者模式-observer","aria-hidden":"true"},"#")],-1),d=e("h2",{id:"what",tabindex:"-1"},[t("What "),e("a",{class:"header-anchor",href:"#what","aria-hidden":"true"},"#")],-1),c=e("p",null,"观察者模式又叫发布订阅模式。",-1),i=e("p",null,"目的：在对象和所有等待数据的观察者之间创建一对多关系，只要对象的状态发生变化，所有观察者都会立即得到通知并更新。",-1),_=e("p",null,"发布者只是一个对象，订阅者（观察者）有多个对象。",-1),h=[o,d,c,i,_];function l(p,u,f,m,b,v){return s(),r("div",null,h)}const w=a(n,[["render",l]]);export{g as __pageData,w as default};
