import{_ as s,o as a,c as n,a as l}from"./app.a874a089.js";const A=JSON.parse('{"title":"Map and Set","description":"","frontmatter":{"tags":["JavaScript"],"date":"2024-01-13-周六","cdate":"2024-01-13T17:53:28.000Z","mdate":"2024-01-15T17:53:28.000Z","status":"done","title":"Map and Set"},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"术语概念","slug":"术语概念","link":"#术语概念","children":[]},{"level":2,"title":"几个问答","slug":"几个问答","link":"#几个问答","children":[{"level":3,"title":"Map的核心特点？","slug":"map的核心特点","link":"#map的核心特点","children":[]},{"level":3,"title":"Map 的创建方式？","slug":"map-的创建方式","link":"#map-的创建方式","children":[]},{"level":3,"title":"Map 相关属性方法？","slug":"map-相关属性方法","link":"#map-相关属性方法","children":[]},{"level":3,"title":"Map的迭代？","slug":"map的迭代","link":"#map的迭代","children":[]},{"level":3,"title":"二维Array   Object   Map 间相互转换？","slug":"二维array-object-map-间相互转换","link":"#二维array-object-map-间相互转换","children":[]},{"level":3,"title":"思考","slug":"思考","link":"#思考","children":[]}]}],"relativePath":"javascript/对象/JS中的Map.md","lastUpdated":1706520204000}'),p={name:"javascript/对象/JS中的Map.md"},o=l(`<h1 id="js中的map" tabindex="-1">JS中的Map <a class="header-anchor" href="#js中的map" aria-hidden="true">#</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p>ECMAScript 6 以前，在 JavaScript 中实现“键/值”式存储可以使用 Object 来方便高效地完成，也就是使用对象属性作为键，再使用属性来引用值。但这种实现并非没有问题，为此 TC39 委员会专门为“键/值”存储定义了一个规范。</p><p>作为 ECMAScript 6 的新增特性，Map 是一种新的集合类型，为这门语言带来了真正的键/值存储机制。Map 的大多数特性都可以通过 Object 类型实现，但二者之间还是存在一些细微的差异。具体实践中使用哪一个，还是值得细细甄别。</p><h2 id="术语概念" tabindex="-1">术语概念 <a class="header-anchor" href="#术语概念" aria-hidden="true">#</a></h2><ul><li>Map：是一种可以存储键值的集合对象，可以存储任意类型的key。</li></ul><h2 id="几个问答" tabindex="-1">几个问答 <a class="header-anchor" href="#几个问答" aria-hidden="true">#</a></h2><h3 id="map的核心特点" tabindex="-1">Map的核心特点？ <a class="header-anchor" href="#map的核心特点" aria-hidden="true">#</a></h3><ul><li>key <strong>不局限于</strong>string 和 symbol。 以下例子说明 Object 只能 string和symbol 作为 key,其他数据类型均会被自动转换，这体现了 Map 与 Object 最大的区别就是可以存储任意类型的key。</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">     </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> john </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;"> 	</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> ben </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Ben</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;"> 	</span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{};</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;"> 	obj[ben] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">234</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;"> 	obj[john] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;"> 	console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(obj[ben]) </span><span style="color:#676E95;font-style:italic;">//123</span></span>
<span class="line"><span style="color:#BABED8;"> 	console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(obj[john]) </span><span style="color:#676E95;font-style:italic;">//123</span></span>
<span class="line"><span style="color:#89DDFF;"> 	</span><span style="color:#676E95;font-style:italic;">// obj[ben] obj[john] 都会被自动转换成&quot;[object Object]&quot; </span></span>
<span class="line"></span></code></pre></div><ul><li><strong>按插入时的顺序迭代</strong></li></ul><h3 id="map-的创建方式" tabindex="-1">Map 的创建方式？ <a class="header-anchor" href="#map-的创建方式" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">  			</span><span style="color:#676E95;font-style:italic;">// 使用嵌套数组初始化映射</span></span>
<span class="line"><span style="color:#BABED8;">  			</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> m1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">([</span></span>
<span class="line"><span style="color:#BABED8;">  					[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  					[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  					[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">  			])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  			</span><span style="color:#82AAFF;">alert</span><span style="color:#BABED8;">(m1</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">size)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"><span style="color:#BABED8;">  			</span></span>
<span class="line"><span style="color:#89DDFF;">  			</span><span style="color:#676E95;font-style:italic;">// 使用自定义迭代器初始化映射</span></span>
<span class="line"><span style="color:#BABED8;">  			</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> m2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  			</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">Symbol</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">iterator</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">*()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  					</span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  					</span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  					</span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  			  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  			</span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="map-相关属性方法" tabindex="-1">Map 相关属性方法？ <a class="header-anchor" href="#map-相关属性方法" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">      </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> sym</span><span style="color:#89DDFF;">=new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mark</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj</span><span style="color:#89DDFF;">={</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">str</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">this is a string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">      </span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      </span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">this is an eg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bool</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">123</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(sym</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Symbol as a key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(arr</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Array as  a key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Object as  a key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#BABED8;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">//&quot;bool&quot;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      </span></span>
<span class="line"><span style="color:#BABED8;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(map</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">size)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      </span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">//每一次 \`map.set\` 调用都会返回 map 本身，所以我们可以进行“链式”调用：</span></span>
<span class="line"><span style="color:#BABED8;">      map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">...</span></span>
<span class="line"></span></code></pre></div><h3 id="map的迭代" tabindex="-1">Map的迭代？ <a class="header-anchor" href="#map的迭代" aria-hidden="true">#</a></h3><ul><li><p>迭代的顺序与插入值的顺序相同。</p></li><li><p>Map提供内置的迭代器，<strong>默认的迭代器是entries</strong>。 调用迭代器可以按插入顺序生成[[key, value],[key,value]...]形式的<strong>数组</strong>。<br><code>console.log(m.entries === m[Symbol.iterator]); // true</code><br><code>m[Symbol.iterator]().next() //取当前迭代的值</code></p><ul><li>m.keys() 返回所有 key 的集合数组</li><li>m.values() 返回所有 value 的集合数组</li><li>如果不使用迭代器，而是使用回调方式，则可以m.forEach((value,key,map)=&gt;{})</li></ul></li></ul><h3 id="二维array-object-map-间相互转换" tabindex="-1">二维Array Object Map 间相互转换？ <a class="header-anchor" href="#二维array-object-map-间相互转换" aria-hidden="true">#</a></h3><ul><li>二维Array 转 Map ：传入<code>new Map()</code>直接转</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> map</span><span style="color:#89DDFF;">=new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">([[</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]])</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span></code></pre></div><ul><li>二维Array转Object：传入内置方法<code>Object.fromEntries()</code>直接转</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> prices </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromEntries</span><span style="color:#BABED8;">([</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">banana</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">meat</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// now prices = { banana: 1, orange: 2, meat: 4 }</span></span>
<span class="line"></span></code></pre></div><ul><li>Object 转 二维数组：传入内置方法<code>Object.entries()</code>直接转</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">30</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#BABED8;">(obj)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//arr=[[&quot;name&quot;,&quot;John&quot;],[&quot;age&quot;,30]]</span></span>
<span class="line"></span></code></pre></div><ul><li>Object 转 Map：传入内置方法<code>Object.entries()</code> <strong>先转成二维数组</strong>,再进行二维数组到 Map的转换</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">30</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">(Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#BABED8;">(obj))</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span></span>
<span class="line"></span></code></pre></div><ul><li>Map转Array：调用迭代器<code>m.entries()</code> 直接转</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">banana</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">apple</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//arr=[[&quot;banana&quot;,1],[&quot;orange&quot;,2],[&quot;apple&quot;,3]]</span></span>
<span class="line"></span></code></pre></div><ul><li>Map转 Object：调用迭代器<code>m.entries()</code> <strong>先转成二维数组</strong>，再进行二维数组到 Object 的转换</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">banana</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">meat</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromEntries</span><span style="color:#BABED8;">(map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#BABED8;">())</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// obj = { banana: 1, orange: 2, meat: 4 }</span></span>
<span class="line"></span></code></pre></div><p>上述不同类型对象之间的转换，核心是理解entries是形如[[key, value],[key,value]...] 的二维数组，其实Object.fromEntries()期待的入参只要是可迭代对象就行了，这里是采用了二维数组的形式。</p><h3 id="思考" tabindex="-1">思考 <a class="header-anchor" href="#思考" aria-hidden="true">#</a></h3><p>为什么 object的 entries 方法使用是 Object.entries(obj) ,而不是 obj.entries():</p><pre><code>因为obj要保证灵活性啊，obj.entries()可以是用户自己定义的，如果官方这么干了，用户就可能要用其他的方法名或直接冲掉原生的entries了。
</code></pre>`,34),e=[o];function t(c,r,D,y,F,B){return a(),n("div",null,e)}const E=s(p,[["render",t]]);export{A as __pageData,E as default};
